import axios from 'axios'
import { useEffect, useState } from 'react'
import { useParams } from 'react-router-dom'
import { Swiper, SwiperSlide } from 'swiper/react'
import { Navigation, Pagination } from 'swiper/modules'
import 'swiper/css'
import 'swiper/css/navigation'
import 'swiper/css/pagination'
import {
	Loader,
	KazakhstanCalculator,
	KyrgyzstanCalculator,
} from '../components'

const translations = {
	price: '–¶–µ–Ω–∞ –≤ –ö–æ—Ä–µ–µ (‚Ç©)',
	Ïó∞Ïãù: '–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞',
	ÏµúÏ¥àÎì±Î°ùÏùº: '–î–∞—Ç–∞ –ø–µ—Ä–≤–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
	Ïó∞Î£å: '–¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞',
	ÌúòÎ∞úÏú†: '–ë–µ–Ω–∑–∏–Ω',
	Í∞ÄÏÜîÎ¶∞: '–ë–µ–Ω–∑–∏–Ω',
	Í≤ΩÏú†: '–î–∏–∑–µ–ª—å',
	Ï†ÑÍ∏∞: '–≠–ª–µ–∫—Ç—Ä–æ',
	ÌïòÏù¥Î∏åÎ¶¨Îìú: '–ì–∏–±—Ä–∏–¥',
	Î≥ÄÏÜçÍ∏∞: '–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è',
	Ïò§ÌÜ†: '–ê–≤—Ç–æ–º–∞—Ç',
	ÏàòÎèô: '–ú–µ—Ö–∞–Ω–∏–∫–∞',
	ÏÉâÏÉÅ: '–¶–≤–µ—Ç',
	Ìù∞ÏÉâ: '–ë–µ–ª—ã–π',
	Í≤ÄÏ†ïÏÉâ: '–ß—ë—Ä–Ω—ã–π',
	ÌöåÏÉâ: '–°–µ—Ä—ã–π',
	ÌååÎûÄÏÉâ: '–°–∏–Ω–∏–π',
	Îπ®Í∞ÑÏÉâ: '–ö—Ä–∞—Å–Ω—ã–π',
	Ï£ºÌñâÍ±∞Î¶¨: '–ü—Ä–æ–±–µ–≥',
	Ï∞®ÎüâÎ≤àÌò∏: '–ì–æ—Å. –Ω–æ–º–µ—Ä',
	Ï∞®ÎåÄÎ≤àÌò∏: 'VIN-–Ω–æ–º–µ—Ä',
	'ÏïïÎ•òÔΩúÏ†ÄÎãπ': '–ë—ã–ª –≤ –î–¢–ü',
	'0Í±¥ÔΩú0Í±¥': '–ù–µ—Ç',
	Î™®Îç∏Î™Ö: '–ú–æ–¥–µ–ª—å',
	ÏÑ∏Í∏àÎØ∏ÎÇ©: '–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –Ω–∞–ª–æ–≥–∞–º',
	ÏóÜÏùå: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
	Ï†úÏãúÎ≤àÌò∏: '–ù–æ–º–µ—Ä –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è',
}

const colorTranslations = {
	Ìù∞ÏÉâ: '–ë–µ–ª—ã–π',
	Í≤ÄÏ†ïÏÉâ: '–ß—ë—Ä–Ω—ã–π',
	ÌöåÏÉâ: '–°–µ—Ä—ã–π',
	ÌååÎûÄÏÉâ: '–°–∏–Ω–∏–π',
	Îπ®Í∞ÑÏÉâ: '–ö—Ä–∞—Å–Ω—ã–π',
	ÏùÄÏÉâ: '–°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π',
	ÎÖπÏÉâ: '–ó–µ–ª—ë–Ω—ã–π',
	ÎÖ∏ÎûÄÏÉâ: '–ñ—ë–ª—Ç—ã–π',
	Ï£ºÌô©ÏÉâ: '–û—Ä–∞–Ω–∂–µ–≤—ã–π',
	Î≥¥ÎùºÏÉâ: '–§–∏–æ–ª–µ—Ç–æ–≤—ã–π',
	Í∞àÏÉâ: '–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π',
	Î≤†Ïù¥ÏßÄÏÉâ: '–ë–µ–∂–µ–≤—ã–π',
	Î∂ÑÌôçÏÉâ: '–†–æ–∑–æ–≤—ã–π',
	Í∏àÏÉâ: '–ó–æ–ª–æ—Ç–æ–π',
	Ï≤≠Î°ùÏÉâ: '–ë–∏—Ä—é–∑–æ–≤—ã–π',
	Í∏∞ÌÉÄ: '–î—Ä—É–≥–æ–π',
}

const ExportCarDetails = () => {
	const [calculatedResultKZ, setCalculatedResultKZ] = useState(null)

	const [usdKrwRate, setUsdKrwRate] = useState(null)
	const [usdRubRate, setUsdRubRate] = useState(null)
	const [usdKztRate, setUsdKztRate] = useState(null)
	const [usdEurRate, setUsdEurRate] = useState(null)

	const [car, setCar] = useState(null)
	const [loading, setLoading] = useState(true)
	const [error, setError] = useState(null)
	const [selectedCountry, setSelectedCountry] = useState(null)
	const [loadingCalc, setLoadingCalc] = useState(false)
	const [errorCalc, setErrorCalc] = useState('')
	const [calculatedResult, setCalculatedResult] = useState(null)

	const { carId } = useParams()

	useEffect(() => {
		const fetchCar = async () => {
			try {
				setLoading(true)
				const response = await axios.get(
					`https://api.encar.com/v1/readside/vehicle/${carId}`,
				)
				setCar(response.data)
			} catch (err) {
				setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö')
				console.error(err)
			} finally {
				setLoading(false)
			}
		}

		if (carId) {
			fetchCar()
		}
	}, [carId])

	useEffect(() => {
		const fetchUsdKrwRate = async () => {
			try {
				const response = await axios.get(
					'https://cdn.jsdelivr.net/npm/@fawazahmed0/currency-api@latest/v1/currencies/usd.json',
				)

				if (response.status === 200) {
					const jsonData = response.data
					const rate = jsonData['usd']['krw']
					const usdRubRate = jsonData['usd']['rub']
					const usdKztRate = jsonData['usd']['kzt']
					const usdEurRate = jsonData['usd']['eur']

					setUsdKrwRate(rate)
					setUsdRubRate(usdRubRate)
					setUsdKztRate(usdKztRate + 3)
					setUsdEurRate(usdEurRate)
				}
			} catch (e) {
				console.error(e)
			}
		}

		fetchUsdKrwRate()
	}, [])

	// –†–∞—Å—á—ë—Ç –ø–æ–¥ –∫–ª—é—á –¥–æ –†–§
	const handleCalculate = async () => {
		setLoadingCalc(true)
		setErrorCalc('')

		// –õ–æ–≥–∏–∫–∞ —Ä–∞—Å—á—ë—Ç–∞ –ª–æ–≥–∏—Å—Ç–∏–∫–∏
		let logisticsCost = 2040000 // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –≤—Å–µ—Ö —Å–∞–Ω–∫—Ü–∏–æ–Ω–Ω—ã—Ö –∞–≤—Ç–æ
		logisticsCost = 2040000 / usdKrwRate

		if (car?.spec?.displacement > 2000) logisticsCost = logisticsCost + 200

		const logisticsCostRub = logisticsCost * usdRubRate

		try {
			const response = await axios.post(
				'https://corsproxy.io/?key=28174bc7&url=https://calcus.ru/calculate/Customs',
				new URLSearchParams({
					owner: 1,
					age: calculateAge(
						car?.category?.formYear,
						car?.category?.yearMonth?.substring(4, 6),
					),
					engine: car?.spec?.fuelName === 'Í∞ÄÏÜîÎ¶∞' ? 1 : 2,
					power: 1,
					power_unit: 1,
					value: car?.spec?.displacement,
					price: car?.advertisement?.price * 10000,
					curr: 'KRW',
				}).toString(),
				{
					withCredentials: false,
					headers: {
						'Content-Type': 'application/x-www-form-urlencoded',
					},
				},
			)

			if (!response.status === 200) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ')

			const data = await response.data

			const formattedTotal = parseInt(
				data.total.split(',')[0].split(' ').join(''),
			)
			const formattedTotal2 = parseInt(
				data.total2.split(',')[0].split(' ').join(''),
			)

			const totalWithLogistics = formattedTotal + logisticsCostRub
			const totalCarWithLogistics = formattedTotal2 + logisticsCostRub

			setCalculatedResult({
				...data,
				logisticsCostRub,
				totalWithLogistics,
				totalCarWithLogistics,
			})
		} catch (err) {
			setErrorCalc(err.message)
		} finally {
			setLoadingCalc(false)
		}
	}

	const calculateAge = (year, month) => {
		const currentDate = new Date()
		const carDate = new Date(year, month - 1, 1)

		const ageInMonths =
			(currentDate.getFullYear() - carDate.getFullYear()) * 12 +
			(currentDate.getMonth() - carDate.getMonth())

		if (ageInMonths < 36) {
			return '0-3'
		} else if (ageInMonths < 60) {
			return '3-5'
		} else if (ageInMonths < 84) {
			return '5-7'
		} else {
			return '7-0'
		}
	}

	if (loading) return <Loader />
	if (error) return <p className='text-center text-red-500'>{error}</p>
	if (!car) return <p className='text-center text-lg'>–ê–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω</p>

	// –ü–æ–ª—É—á–µ–Ω–∏–µ URL –ø–µ—Ä–≤–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
	const getPhotoUrl = (path) => `https://ci.encar.com/carpicture${path}`
	const sortedPhotos = car?.photos?.sort((a, b) => (a.path > b.path ? 1 : -1))
	const uniquePhotos = [
		...new Map(car?.photos?.map((photo) => [photo.path, photo])).values(),
	]

	const formattedYearMonth = `${car?.category?.yearMonth.substring(
		4,
	)}/${car?.category?.yearMonth.substring(0, 4)}`

	const carPriceKorea = car?.advertisement?.price * 10000
	const carPriceUsd = Math.round(
		(car?.advertisement?.price * 10000) / usdKrwRate,
	)
	const carPriceRub = carPriceUsd * usdRubRate

	return (
		<div className='container mx-auto mt-20 md:mt-30 p-6 bg-white shadow-lg rounded-lg'>
			<h1 className='text-3xl font-bold text-center mb-6'>
				{car?.category?.manufacturerEnglishName}{' '}
				{car?.category?.modelGroupEnglishName} {car?.category?.gradeEnglishName}
			</h1>

			{/* –°–ª–∞–π–¥–µ—Ä —Å —Ñ–æ—Ç–æ */}
			{sortedPhotos.length > 0 && (
				<div className='max-w-2xl mx-auto mb-'>
					<Swiper
						modules={[Navigation, Pagination]}
						spaceBetween={10}
						slidesPerView={1}
						navigation
						pagination={{ clickable: true }}
						className='rounded-lg shadow-lg'
					>
						{uniquePhotos.map((photo, index) => (
							<SwiperSlide key={index}>
								<img
									src={getPhotoUrl(photo.path)}
									alt={`Car image ${index + 1}`}
									className='w-full h-auto rounded-lg'
								/>
							</SwiperSlide>
						))}
					</Swiper>
				</div>
			)}

			{/* –î–∞–Ω–Ω—ã–µ –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ */}
			<div className='mt-6 p-5 bg-gray-50 shadow-md rounded-lg'>
				<p className='text-gray-600'>
					<strong>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</strong> {formattedYearMonth}
				</p>
				<p className='text-gray-600'>
					<strong>–û–±—ä—ë–º –¥–≤–∏–≥–∞—Ç–µ–ª—è:</strong>{' '}
					{car?.spec?.displacement.toLocaleString()} —Å–º¬≥
				</p>
				<p className='text-gray-600'>
					<strong>–ü—Ä–æ–±–µ–≥:</strong> {car?.spec?.mileage.toLocaleString()} –∫–º
				</p>
				<p className='text-gray-600'>
					<strong>–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è:</strong>{' '}
					{translations[car?.spec?.transmissionName]}
				</p>
				<p className='text-gray-600'>
					<strong>–¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞:</strong> {translations[car?.spec?.fuelName]}
				</p>
				<p className='text-gray-600'>
					<strong>–¶–≤–µ—Ç:</strong> {colorTranslations[car?.spec?.colorName]}
				</p>
				<p className='text-gray-800 font-bold text-lg mt-4'>
					<strong>
						–¶–µ–Ω–∞ –≤ –ö–æ—Ä–µ–µ: <br />
					</strong>{' '}
					‚Ç©{carPriceKorea.toLocaleString()} | ${carPriceUsd.toLocaleString()}
				</p>
			</div>

			{/* –ö–æ–Ω—Ç–∞–∫—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ */}
			<div className='mt-6 p-5 bg-white shadow-md rounded-lg text-center'>
				<h2 className='text-xl font-semibold mb-4'>–ö–æ–Ω—Ç–∞–∫—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤</h2>
				<p className='text-gray-700'>
					<strong>–†–∞–º–∏—Å:</strong>{' '}
					<a href='tel:+821080296232' className='text-blue-600 hover:underline'>
						+82 10-8029-6232
					</a>
				</p>
				<p className='text-gray-700'>
					<strong>–ê—Ä—Ç—ë–º:</strong>{' '}
					<a href='tel:+821082828062' className='text-blue-600 hover:underline'>
						+82 10-8282-8062
					</a>
				</p>
			</div>

			{/* –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ */}
			<div className='mt-6 p-6 bg-white shadow-lg rounded-lg text-center border border-gray-200'>
				<h2 className='text-2xl font-semibold mb-6 text-gray-800'>
					–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ:
				</h2>
				<div className='flex justify-center gap-6 flex-wrap'>
					<button
						onClick={() => setSelectedCountry('russia')}
						className={`px-6 py-3 rounded-lg shadow-md text-lg font-semibold transition duration-300 border-2 cursor-pointer
				${
					selectedCountry === 'russia'
						? 'bg-blue-700 text-white border-blue-700'
						: 'bg-white text-blue-700 border-blue-500 hover:bg-blue-100'
				}`}
					>
						üá∑üá∫ –†–æ—Å—Å–∏—è
					</button>
					<button
						onClick={() => setSelectedCountry('kazakhstan')}
						className={`px-6 py-3 rounded-lg shadow-md text-lg font-semibold transition duration-300 border-2 cursor-pointer
				${
					selectedCountry === 'kazakhstan'
						? 'bg-green-700 text-white border-green-700'
						: 'bg-white text-green-700 border-green-500 hover:bg-green-100'
				}`}
					>
						üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω
					</button>
					<button
						onClick={() => setSelectedCountry('kyrgyzstan')}
						className={`px-6 py-3 rounded-lg shadow-md text-lg font-semibold transition duration-300 border-2 cursor-pointer
				${
					selectedCountry === 'kyrgyzstan'
						? 'bg-yellow-600 text-white border-yellow-600'
						: 'bg-white text-yellow-700 border-yellow-500 hover:bg-yellow-100'
				}`}
					>
						üá∞üá¨ –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω
					</button>
				</div>
			</div>

			{/* –†–§ */}
			{selectedCountry === 'russia' && (
				<div className='mt-8 flex justify-center'>
					<button
						className={`cursor-pointer relative py-3 px-10 rounded-lg shadow-xl text-lg font-semibold transition-all duration-300 border-2 flex items-center gap-2
			${
				loadingCalc
					? 'bg-gray-600 border-gray-700 text-gray-300 opacity-60 cursor-not-allowed'
					: 'bg-gradient-to-r from-red-600 to-red-700 border-red-800 text-white hover:from-red-700 hover:to-red-800 hover:border-red-900 hover:scale-105'
			}`}
						onClick={handleCalculate}
						disabled={loadingCalc}
					>
						{loadingCalc ? (
							<>
								<span className='animate-spin border-t-2 border-white border-solid rounded-full w-5 h-5'></span>
								<span>–†–∞—Å—á—ë—Ç...</span>
							</>
						) : (
							<>
								üìä <span>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å</span>
							</>
						)}
					</button>
				</div>
			)}

			{calculatedResult && selectedCountry === 'russia' && (
				<div className='mt-6 p-5 bg-gray-50 shadow-md rounded-lg text-center'>
					<h2 className='text-xl font-semibold mb-4'>–†–∞—Å—á—ë—Ç –¥–ª—è –†–æ—Å—Å–∏–∏</h2>
					<p className='text-gray-600'>
						–°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {carPriceRub.toLocaleString('ru-RU')} ‚ÇΩ
					</p>
					<p className='text-gray-600'>
						–¢–∞–º–æ–∂–µ–Ω–Ω–∞—è –ø–æ—à–ª–∏–Ω–∞: {calculatedResult?.tax?.toLocaleString()} ‚ÇΩ
					</p>
					<p className='text-gray-600'>
						–¢–∞–º–æ–∂–µ–Ω–Ω—ã–π —Å–±–æ—Ä: {calculatedResult?.sbor?.toLocaleString()} ‚ÇΩ
					</p>
					<p className='text-gray-600'>
						–£—Ç–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–±–æ—Ä: {calculatedResult?.util?.toLocaleString()} ‚ÇΩ
					</p>
					{/* <p className='text-gray-600'>
						–ò—Ç–æ–≥–æ (—Ç–∞–º–æ–∂–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –≤–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫–µ):{' '}
						{calculatedResult?.total?.toLocaleString()} ‚ÇΩ
					</p> */}
					<p className='text-black mt-3 font-medium text-lg w-1/2 mx-auto'>
						–°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è –ø–æ–¥ –∫–ª—é—á –≤–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫–µ: <br />
						{calculatedResult?.totalCarWithLogistics?.toLocaleString('ru-RU')} ‚ÇΩ
					</p>
				</div>
			)}

			{/* –ö–ó */}
			{selectedCountry === 'kazakhstan' && (
				<KazakhstanCalculator
					usdKztRate={usdKztRate}
					usdKrwRate={usdKrwRate}
					carPriceKRW={carPriceKorea}
				/>
			)}

			{calculatedResultKZ && selectedCountry === 'kazakhstan' && (
				<div className='mt-6 p-5 bg-gray-50 shadow-md rounded-lg text-center'>
					<h2 className='text-xl font-semibold mb-4'>–†–∞—Å—á—ë—Ç –¥–ª—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞</h2>
					<p className='text-gray-600'>
						–°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ:{' '}
						{Math.round(calculatedResultKZ?.carPriceKZT).toLocaleString()} ‚Ç∏
					</p>
					<p className='text-gray-600'>
						–¢–∞–º–æ–∂–µ–Ω–Ω–∞—è –ø–æ—à–ª–∏–Ω–∞ (15%):{' '}
						{Math.round(calculatedResultKZ?.vatKZT).toLocaleString()} ‚Ç∏
					</p>
					<p className='text-gray-600'>
						–ù–î–° (12%): {Math.round(calculatedResultKZ?.vatKZT).toLocaleString()}{' '}
						‚Ç∏
					</p>
					<p className='text-black mt-3 font-medium text-lg w-1/2 mx-auto'>
						<strong>
							–ò—Ç–æ–≥–æ:{' '}
							{Math.round(calculatedResultKZ?.totalCostKZT).toLocaleString()} ‚Ç∏
						</strong>
					</p>
				</div>
			)}

			{selectedCountry === 'kyrgyzstan' && (
				<KyrgyzstanCalculator usdEurRate={usdEurRate} />
			)}

			{errorCalc && <p className='text-center text-red-500'>{errorCalc}</p>}
		</div>
	)
}

export default ExportCarDetails
